/****** CREATING DATABASE ******/
USE [master]
GO

/****** Object:  Database [DealerDB]    Script Date: 1/11/2024 6:27:05 PM ******/
CREATE DATABASE [DealerDB]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'DealerDB', FILENAME = N'D:\SQLServer\MSSQL16.MSSQLSERVER\MSSQL\DATA\DealerDB.mdf' , SIZE = 8192KB , MAXSIZE = UNLIMITED, FILEGROWTH = 65536KB )
 LOG ON 
( NAME = N'DealerDB_log', FILENAME = N'D:\SQLServer\MSSQL16.MSSQLSERVER\MSSQL\DATA\DealerDB_log.ldf' , SIZE = 8192KB , MAXSIZE = 2048GB , FILEGROWTH = 65536KB )
 WITH CATALOG_COLLATION = DATABASE_DEFAULT, LEDGER = OFF
GO

IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
begin
EXEC [DealerDB].[dbo].[sp_fulltext_database] @action = 'enable'
end
GO

ALTER DATABASE [DealerDB] SET ANSI_NULL_DEFAULT OFF 
GO

ALTER DATABASE [DealerDB] SET ANSI_NULLS OFF 
GO

ALTER DATABASE [DealerDB] SET ANSI_PADDING OFF 
GO

ALTER DATABASE [DealerDB] SET ANSI_WARNINGS OFF 
GO

ALTER DATABASE [DealerDB] SET ARITHABORT OFF 
GO

ALTER DATABASE [DealerDB] SET AUTO_CLOSE OFF 
GO

ALTER DATABASE [DealerDB] SET AUTO_SHRINK OFF 
GO

ALTER DATABASE [DealerDB] SET AUTO_UPDATE_STATISTICS ON 
GO

ALTER DATABASE [DealerDB] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO

ALTER DATABASE [DealerDB] SET CURSOR_DEFAULT  GLOBAL 
GO

ALTER DATABASE [DealerDB] SET CONCAT_NULL_YIELDS_NULL OFF 
GO

ALTER DATABASE [DealerDB] SET NUMERIC_ROUNDABORT OFF 
GO

ALTER DATABASE [DealerDB] SET QUOTED_IDENTIFIER OFF 
GO

ALTER DATABASE [DealerDB] SET RECURSIVE_TRIGGERS OFF 
GO

ALTER DATABASE [DealerDB] SET  DISABLE_BROKER 
GO

ALTER DATABASE [DealerDB] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO

ALTER DATABASE [DealerDB] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO

ALTER DATABASE [DealerDB] SET TRUSTWORTHY OFF 
GO

ALTER DATABASE [DealerDB] SET ALLOW_SNAPSHOT_ISOLATION OFF 
GO

ALTER DATABASE [DealerDB] SET PARAMETERIZATION SIMPLE 
GO

ALTER DATABASE [DealerDB] SET READ_COMMITTED_SNAPSHOT OFF 
GO

ALTER DATABASE [DealerDB] SET HONOR_BROKER_PRIORITY OFF 
GO

ALTER DATABASE [DealerDB] SET RECOVERY FULL 
GO

ALTER DATABASE [DealerDB] SET  MULTI_USER 
GO

ALTER DATABASE [DealerDB] SET PAGE_VERIFY CHECKSUM  
GO

ALTER DATABASE [DealerDB] SET DB_CHAINING OFF 
GO

ALTER DATABASE [DealerDB] SET FILESTREAM( NON_TRANSACTED_ACCESS = OFF ) 
GO

ALTER DATABASE [DealerDB] SET TARGET_RECOVERY_TIME = 60 SECONDS 
GO

ALTER DATABASE [DealerDB] SET DELAYED_DURABILITY = DISABLED 
GO

ALTER DATABASE [DealerDB] SET ACCELERATED_DATABASE_RECOVERY = OFF  
GO

ALTER DATABASE [DealerDB] SET QUERY_STORE = ON
GO

ALTER DATABASE [DealerDB] SET QUERY_STORE (OPERATION_MODE = READ_WRITE, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 30), DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_STORAGE_SIZE_MB = 1000, QUERY_CAPTURE_MODE = AUTO, SIZE_BASED_CLEANUP_MODE = AUTO, MAX_PLANS_PER_QUERY = 200, WAIT_STATS_CAPTURE_MODE = ON)
GO

ALTER DATABASE [DealerDB] SET  READ_WRITE 
GO

/****** CREATE DATABASE TABLES******/
USE [DealerDB]
GO
SET NOCOUNT ON;
CREATE TABLE [dbo].[Dealers] (
    [dealerID] INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
    [first_name] NVARCHAR(50) NOT NULL,
    [last_name] NVARCHAR(50) NOT NULL,
    [salary] DECIMAL(10,2) NOT NULL,

    CONSTRAINT dealer_salary_gt_zero CHECK (salary > 1400)
)

CREATE TABLE [dbo].[Clients](
    [clientID] INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
    [dealerID] INT FOREIGN KEY REFERENCES [dbo].[Dealers](dealerID),
    [first_name] NVARCHAR(50) NOT NULL,
    [last_name] NVARCHAR(50) NOT NULL,
    [CNP] NVARCHAR(13) NOT NULL UNIQUE,
    [phone_number] NVARCHAR(10) NOT NULL UNIQUE,
    [email] NVARCHAR(50) NOT NULL,
    [country] NVARCHAR(50) NOT NULL,
    [city] NVARCHAR(50) NOT NULL,
)

CREATE TABLE [dbo].[Models](
    [modelID] INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
    [brand] NVARCHAR(50) NOT NULL,
    [name] NVARCHAR(50) NOT NULL,
    [engine] NVARCHAR(50) NOT NULL,
    [horsepower] INT NOT NULL,
    [fuel] NVARCHAR(50) NOT NULL,
    [transmission] NVARCHAR(50) NOT NULL,

    CONSTRAINT model_horsepower_gt_zero CHECK (horsepower > 0)
)

CREATE TABLE [dbo].[Cars](
    [carID] INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
    [modelID] INT FOREIGN KEY REFERENCES [dbo].[Models](modelID),
    [color] NVARCHAR(50) NOT NULL,
    [year] INT NOT NULL,
    [price] DECIMAL(10,2) NOT NULL,

    CONSTRAINT car_year_gt_zero CHECK (year > 0),
    CONSTRAINT car_price_gt_zero CHECK (price > 0)
)

CREATE TABLE [dbo].[Features](
    [featureID] INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
    [description] NVARCHAR(50) NOT NULL
)

CREATE TABLE [dbo].[Sales](
    [saleID] INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
    [carID] INT FOREIGN KEY REFERENCES [dbo].[Cars](carID),
    [clientID] INT FOREIGN KEY REFERENCES [dbo].[Clients](clientID),
    [dealerID] INT FOREIGN KEY REFERENCES [dbo].[Dealers](dealerID),
    [date] DATE NOT NULL
)

CREATE TABLE [dbo].[Car_Features_Links](
    [carID] INT FOREIGN KEY REFERENCES [dbo].[Cars](carID),
    [featureID] INT FOREIGN KEY REFERENCES [dbo].[Features](featureID),
    PRIMARY KEY (carID, featureID)
)
GO

-- Trigger that doesn't allow insertion of a dealer with a salary < 1400
CREATE TRIGGER [dbo].[dealer_salary_trigger]
ON [dbo].[Dealers]
FOR INSERT, UPDATE
AS
BEGIN
    IF EXISTS (SELECT * FROM inserted WHERE salary < 1400)
    BEGIN
        RAISERROR('Dealer salary cannot be lower than 1400', 16, 1)
        ROLLBACK TRANSACTION
    END
END
GO

-- Trigger that doesn't allow horsepowers < 0
CREATE TRIGGER [dbo].[model_horsepower_trigger]
ON [dbo].[Models]
FOR INSERT, UPDATE
AS
BEGIN
    IF EXISTS (SELECT * FROM inserted WHERE horsepower < 0)
    BEGIN
        RAISERROR('Horsepower cannot be lower than 0', 16, 1)
        ROLLBACK TRANSACTION
    END
END
GO

-- Trigger that doesn't allow deletion of Ion Tiriac (obvious reasons)
CREATE TRIGGER [dbo].[ion_tiriac_trigger]
ON [dbo].[Dealers]
FOR DELETE
AS
BEGIN
    IF EXISTS (SELECT * FROM deleted WHERE first_name = 'Ion' AND last_name = 'Tiriac')
    BEGIN
        RAISERROR('Ion Tiriac cannot be deleted', 16, 1)
        ROLLBACK TRANSACTION
    END
END
GO
